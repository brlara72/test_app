Usage:
  rails generate scaffold NAME [field[:type][:index] field[:type][:index]] [options]

Options:
  -c, --scaffold-controller=NAME                # Scaffold controller to be invoked
                                                # Default: scaffold_controller
  -y, [--stylesheets]                           # Generate Stylesheets
                                                # Default: true
  -o, --orm=NAME                                # Orm to be invoked
                                                # Default: active_record
  -se, [--stylesheet-engine=STYLESHEET_ENGINE]  # Engine for Stylesheets
                                                # Default: scss
      [--skip-namespace]                        # Skip namespace (affects only isolated applications)
      [--force-plural]                          # Forces the use of a plural ModelName
      [--assets]                                # Indicates when to generate assets
                                                # Default: true
      [--old-style-hash]                        # Force using old style hash (:foo => 'bar') on Ruby >= 1.9
      --resource-route                          # Indicates when to generate resource route
                                                # Default: true

ScaffoldController options:
      [--helper]                # Indicates when to generate helper
                                # Default: true
  -e, [--template-engine=NAME]  # Template engine to be invoked
                                # Default: erb
  -t, [--test-framework=NAME]   # Test framework to be invoked
                                # Default: rspec

Runtime options:
  -f, [--force]    # Overwrite files that already exist
  -s, [--skip]     # Skip files that already exist
  -p, [--pretend]  # Run but do not make any changes
  -q, [--quiet]    # Suppress status output

ActiveRecord options:
  [--parent=PARENT]  # The parent class for the generated model
  [--timestamps]     # Indicates when to generate timestamps
                     # Default: true
  [--indexes]        # Add indexes for references and belongs_to columns
                     # Default: true
  [--migration]      # Indicates when to generate migration
                     # Default: true

Rspec options:
  [--helper-specs]              # Generate helper specs
                                # Default: true
  [--integration-tool=NAME]     # Integration tool to be invoked
                                # Default: rspec
  [--routing-specs]             # Generate routing specs
                                # Default: true
  [--controller-specs]          # Generate controller specs
                                # Default: true
  [--singleton]                 # Supply to create a singleton controller
  [--view-specs]                # Generate view specs
                                # Default: true
  [--webrat]                    # Use webrat methods/matchers
  [--webrat-matchers]           # Use webrat methods/matchers (deprecated - use --webrat)
  [--fixture-replacement=NAME]  # Fixture replacement to be invoked
  [--fixture]                   # Indicates when to generate fixture

Description:
    Scaffolds an entire resource, from model and migration to controller and
    views, along with a full test suite. The resource is ready to use as a
    starting point for your RESTful, resource-oriented application.

    Pass the name of the model (in singular form), either CamelCased or
    under_scored, as the first argument, and an optional list of attribute
    pairs.

    Attributes are field arguments specifying the model's attributes. You can
    optionally pass the type and an index to each field. For instance:
    "title body:text tracking_id:integer:uniq" will generate a title field of
    string type, a body with text type and a tracking_id as an integer with an
    unique index. "index" could also be given instead of "uniq" if one desires
    a non unique index.

    Timestamps are added by default, so you don't have to specify them by hand
    as 'created_at:datetime updated_at:datetime'.

    You don't have to think up every attribute up front, but it helps to
    sketch out a few so you can start working with the resource immediately.

    For example, 'scaffold post title body:text published:boolean' gives
    you a model with those three attributes, a controller that handles
    the create/show/update/destroy, forms to create and edit your posts, and
    an index that lists them all, as well as a resources :posts declaration
    in config/routes.rb.

    If you want to remove all the generated files, run
    'rails destroy scaffold ModelName'.

Examples:
    `rails generate scaffold post`
    `rails generate scaffold post title body:text published:boolean`
    `rails generate scaffold purchase amount:decimal tracking_id:integer:uniq`
